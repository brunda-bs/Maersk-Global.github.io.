apiVersion: v1
kind: ConfigMap
metadata:
  name: metrics-collector-config
data:
  collector.yaml: |-
    receivers:
        otlp:
            protocols:
                grpc: null
        prometheus:
          config:
            scrape_configs:
             - job_name: 'kuma-dataplanes'
               scrape_interval: "5s"
               relabel_configs:
               - source_labels:
                 - k8s_kuma_io_name
                 regex: "(.*)"
                 target_label: pod
               - source_labels:
                 - k8s_kuma_io_namespace
                 regex: "(.*)"
                 target_label: namespace
               - source_labels:
                 - __meta_kuma_mesh
                 regex: "(.*)"
                 target_label: mesh
               - source_labels:
                 - __meta_kuma_dataplane
                 regex: "(.*)"
                 target_label: dataplane
               - source_labels:
                 - __meta_kuma_service
                 regex: "(.*)"
                 target_label: service
               - action: labelmap
                 regex: __meta_kuma_label_(.+)
               metric_relabel_configs:
               - source_labels: [__name__]
                 regex: "(envoy_listener_downstream_cx_length_ms_bucket)"
                 action: drop
               kuma_sd_configs:
               - server: http://kuma-control-plane.kuma-system:5676
               tls_config:
                 insecure_skip_verify: true
    processors:
        batch: null
        batch/2:
            timeout: 10s
            send_batch_size: 1000
            send_batch_max_size: 2000
        k8sattributes:
        memory_limiter:
            # 80% of maximum memory up to 2G
            limit_mib: 4000
            # 25% of limit up to 2G
            spike_limit_mib: 1024
            check_interval: 5s

    exporters:
        datadog:
            hostname: kuma-cp-metrics-${CLUSTER_NAME}
            api:
                key: "${DD_API_KEY}"
                site: datadoghq.eu
            tags:
                - app:servicemesh
                - env:${ENVIRONMENT_NAME}
                - zone:${CLUSTER_NAME}
                - provider:${CLOUD_NAME}
                - region:${REGION_NAME}
                - service:kuma
                - business_platform:servicemesh
                - brand:maersk
                - team:purplesea
        prometheusremotewrite:
            endpoint: "https://metrics.pensieve.maersk-digital.net/api/v1/push"
            auth:
                authenticator: oauth2client
            external_labels:
                app: servicemesh
                env: ${ENVIRONMENT_NAME}
                zone: ${CLUSTER_NAME}
                product_id: servicemesh
                provider: ${CLOUD_NAME}
                region: ${REGION_NAME}

    extensions:
        # Health Check extension enables an HTTP url that can be probed to check the status of the OpenTelemetry Collector. This extension can be used as a liveness and/or readiness probe on Kubernetes.
        # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/healthcheckextension/README.md
        health_check: null
        health_check/1:
            endpoint: 0.0.0.0:13133
        # Performance Profiler extension enables the golang net/http/pprof endpoint. This is typically used by developers to collect performance profiles and investigate issues with the service
        # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/pprofextension/README.md
        pprof: null
        pprof/1:
            endpoint: 0.0.0.0:1777
            block_profile_fraction: 3
            mutex_profile_fraction: 5
        memory_ballast:
            size_mib: 512
        zpages: {}
        oauth2client:
            client_id: "${CLIENT_ID}"
            client_secret: "${CLIENT_SECRET}"
            token_url: https://login.microsoftonline.com/05d75c05-fa1a-42e7-9cf1-eb416c396f2d/oauth2/v2.0/token
            scopes: ["api://ingestion.pensieve/.default"]
    service:
        extensions:
            - health_check/1
            - pprof/1
            - zpages
            - oauth2client
        pipelines:
            metrics:
                receivers:
                    - prometheus
                processors:
                    - memory_limiter
                    - batch/2
                    - k8sattributes
                exporters:
                    - datadog
                    - prometheusremotewrite
